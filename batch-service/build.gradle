plugins {
    id 'com.palantir.docker' version '0.35.0'
    id 'com.github.johnrengelman.shadow' version '8.0.0'
}

group = 'com.danal.batch'
version = '1.0.0'

repositories {
    mavenCentral()
}

dependencies {
    // Spring Framework 6.x
    implementation enforcedPlatform('org.springframework:spring-framework-bom:6.1.5')

    implementation 'org.springframework:spring-context'
    implementation 'org.springframework:spring-aop'
    implementation 'org.springframework:spring-beans'
    implementation 'org.springframework:spring-tx'
    implementation 'org.springframework:spring-jdbc'
    implementation 'org.springframework:spring-core'
    implementation 'org.springframework:spring-orm'

    // Spring Batch 5.x
    implementation 'org.springframework.batch:spring-batch-core:5.0.0'
    implementation 'org.springframework.batch:spring-batch-infrastructure:5.0.0'
    testImplementation 'org.springframework.batch:spring-batch-test:5.0.0'

    // MySQL 8.x Driver
    implementation 'mysql:mysql-connector-java:8.0.33'

    // HikariCP
    implementation 'com.zaxxer:HikariCP:5.1.0'

    // JPA
    implementation 'org.springframework.data:spring-data-jpa:3.4.2'

    // Hibernate
    implementation 'org.hibernate.orm:hibernate-core:6.6.7.Final'

    // JPA API
    implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
}

tasks.shadowJar {
    archiveBaseName.set('batch-service')  // JAR 이름 설정
    archiveVersion.set('1.0.0')  // 버전 설정
    archiveClassifier.set('')  // 클래스파이어를 빈 문자열로 설정 (결과적으로 `-all`을 제거)
    destinationDirectory.set(layout.buildDirectory.dir('libs'))  // 빌드된 JAR 파일의 위치 설정

    manifest {
        attributes(
                'Main-Class': 'com.danal.batch.BatchApplication'  // 실행 시 시작할 Main 클래스 설정
        )
    }
}

docker {
    dependsOn shadowJar

    println(tasks.shadowJar.outputs.files)
    name rootProject.name + "-" + project.name + ":" + version
    dockerfile file("../Dockerfile")
    files tasks.shadowJar.outputs.files
    buildArgs(['JAR_FILE': tasks.shadowJar.outputs.files.singleFile.name])
}